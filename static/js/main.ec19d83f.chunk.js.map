{"version":3,"sources":["utils/queries.js","pages/Home.js","utils/mutations.js","pages/Matchup.js","pages/Vote.js","pages/NotFound.js","App.js","index.js"],"names":["QUERY_TECH","gql","QUERY_MATCHUPS","Home","useQuery","fetchPolicy","loading","data","matchupList","matchups","className","map","matchup","to","pathname","_id","tech1","tech2","CREATE_MATCHUP","CREATE_VOTE","Matchup","techList","tech","useState","formData","setFormData","navigate","useNavigate","useMutation","createMatchup","error","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","variables","console","onSubmit","onChange","type","Vote","id","useParams","createVote","handleVote","techNum","tech1_votes","tech2_votes","onClick","NotFound","location","useLocation","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec19d83f.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const QUERY_TECH = gql`\n  query tech {\n    tech {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_MATCHUPS = gql`\n  query matchups($_id: String) {\n    matchups(_id: $_id) {\n      _id\n      tech1\n      tech2\n      tech1_votes\n      tech2_votes\n    }\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_MATCHUPS } from '../utils/queries';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_MATCHUPS, {\n    fetchPolicy: \"no-cache\"\n  });\n\n  const matchupList = data?.matchups || [];\n\n  return (\n    <div className=\"card bg-white card-rounded w-50\">\n      <div className=\"card-header bg-dark text-center\">\n        <h1>Welcome to Tech Matchup!</h1>\n      </div>\n      <div className=\"card-body m-5\">\n        <h2>Here is a list of matchups you can vote on:</h2>\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <ul className=\"square\">\n            {matchupList.map((matchup) => {\n              return (\n                <li key={matchup._id}>\n                  <Link to={{ pathname: `/matchup/${matchup._id}` }}>\n                    {matchup.tech1} vs. {matchup.tech2}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n      <div className=\"card-footer text-center m-3\">\n        <h2>Ready to create a new matchup?</h2>\n        <Link to=\"/matchup\">\n          <button className=\"btn btn-lg btn-danger\">Create Matchup!</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { gql } from '@apollo/client';\n\nexport const CREATE_MATCHUP = gql`\n  mutation createMatchup($tech1: String!, $tech2: String!) {\n    createMatchup(tech1: $tech1, tech2: $tech2) {\n      _id\n      tech1\n      tech2\n    }\n  }\n`;\n\nexport const CREATE_VOTE = gql`\n  mutation createVote($_id: String!, $techNum: Int!) {\n    createVote(_id: $_id, techNum: $techNum) {\n      _id\n      tech1\n      tech2\n      tech1_votes\n      tech2_votes\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { QUERY_TECH } from '../utils/queries';\nimport { CREATE_MATCHUP } from '../utils/mutations';\n\nconst Matchup = () => {\n  const { loading, data } = useQuery(QUERY_TECH);\n\n  const techList = data?.tech || [];\n\n  const [formData, setFormData] = useState({\n    tech1: 'JavaScript',\n    tech2: 'JavaScript',\n  });\n  let navigate = useNavigate();\n\n  const [createMatchup, { error }] = useMutation(CREATE_MATCHUP);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await createMatchup({\n        variables: { ...formData },\n      });\n\n      navigate(`/matchup/${data.createMatchup._id}`);\n    } catch (err) {\n      console.error(err);\n    }\n\n    setFormData({\n      tech1: 'JavaScript',\n      tech2: 'JavaScript',\n    });\n  };\n\n  return (\n    <div className=\"card bg-white card-rounded w-25\">\n      <div className=\"card-header bg-dark text-center\">\n        <h1>Let's create a matchup!</h1>\n      </div>\n      <div className=\"card-body m-5\">\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <form onSubmit={handleFormSubmit}>\n            <label>Tech 1: </label>\n            <select name=\"tech1\" onChange={handleInputChange}>\n              {techList.map((tech) => {\n                return (\n                  <option key={tech._id} value={tech.name}>\n                    {tech.name}\n                  </option>\n                );\n              })}\n            </select>\n            <label>Tech 2: </label>\n            <select name=\"tech2\" onChange={handleInputChange}>\n              {techList.map((tech) => {\n                return (\n                  <option key={tech._id} value={tech.name}>\n                    {tech.name}\n                  </option>\n                );\n              })}\n            </select>\n            <button className=\"btn btn-danger\" type=\"submit\">\n              Create Matchup!\n            </button>\n          </form>\n        )}\n      </div>\n      {error && <div>Something went wrong...</div>}\n    </div>\n  );\n};\n\nexport default Matchup;\n","import { useQuery, useMutation } from '@apollo/client';\nimport { useParams, Link } from 'react-router-dom';\nimport { CREATE_VOTE } from '../utils/mutations';\nimport { QUERY_MATCHUPS } from '../utils/queries';\n\nconst Vote = () => {\n  let { id } = useParams();\n\n  const { loading, data } = useQuery(QUERY_MATCHUPS, {\n    variables: { _id: id },\n  });\n\n  const matchup = data?.matchups || [];\n\n  const [createVote, { error }] = useMutation(CREATE_VOTE);\n\n  const handleVote = async (techNum) => {\n    try {\n      await createVote({\n        variables: { _id: id, techNum: techNum },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"card bg-white card-rounded w-50\">\n      <div className=\"card-header bg-dark text-center\">\n        <h1>Here is the matchup!</h1>\n      </div>\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <div className=\"card-body text-center mt-3\">\n          <h2>\n            {matchup[0].tech1} vs. {matchup[0].tech2}\n          </h2>\n          <h3>\n            {matchup[0].tech1_votes} : {matchup[0].tech2_votes}\n          </h3>\n          <button className=\"btn btn-info\" onClick={() => handleVote(1)}>\n            Vote for {matchup[0].tech1}\n          </button>{' '}\n          <button className=\"btn btn-info\" onClick={() => handleVote(2)}>\n            Vote for {matchup[0].tech2}\n          </button>\n          <div className=\"card-footer text-center m-3\">\n            <br></br>\n            <Link to=\"/\">\n              <button className=\"btn btn-lg btn-danger\">\n                View all matchups\n              </button>\n            </Link>\n          </div>\n        </div>\n      )}\n      {error && <div>Something went wrong...</div>}\n    </div>\n  );\n};\n\nexport default Vote;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nfunction NotFound() {\n  let location = useLocation();\n  return (\n    <div className=\"card bg-white card-rounded w-50\">\n      <div className=\"card-header bg-dark text-center\">\n        <h1>\n          No match for <code>{location.pathname}</code>\n        </h1>\n      </div>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport Home from './pages/Home';\nimport Matchup from './pages/Matchup';\nimport Vote from './pages/Vote';\nimport NotFound from './pages/NotFound';\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-center align-center min-100-vh bg-primary\">\n          <Routes>\n            <Route \n              path=\"/\" \n              element={<Home />}\n            />\n            <Route \n              path=\"/matchup\" \n              element={<Matchup />}\n            />\n            <Route \n              path=\"/matchup/:id\" \n              element={<Vote />}\n            />\n            <Route \n              path=\"*\"\n              element={<NotFound />}\n            />\n          </Routes>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}